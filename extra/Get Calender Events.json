{"files":[{"id":"764687a2-66e0-45df-9f3a-af3cd0892129","name":"Fetch first event of the day from calendar for alarm clock","type":"server_js","source":"/* Fetch first event of the day to set alarm clock\n * Platform: Google WebApp Script\n * (c) Copyright 2016, Coert Vonk, Sander Vonk\n */\n\nfunction _alarmTime(event) {\n  if (event \u003d\u003d undefined ) {\n    return undefined;\n  }\n  // https://code.google.com/p/google-apps-script-issues/issues/detail?id\u003d4433\n  var reminders \u003d event.getPopupReminders();  // known issue: method getPopupReminders() doesn\u0027t return anything if there is only one reminder\n  if (reminders.length \u003d\u003d 0) {\n    reminder \u003d 0;   \n  }\n  date \u003d new Date(event.getStartTime().getTime()-reminders[0]*60*1000);\n  return date;\n}\n\nfunction _findFirstAlarm(events) {\n  var firstAlarmTime \u003d undefined;\n  var firstAlarmIdx \u003d undefined;\n  \n  for (var ii \u003d 0; ii \u003c events.length; ii++) {\n    var event\u003devents[ii];\n    switch(event.getMyStatus()) {\n      case CalendarApp.GuestStatus.OWNER:\n      case CalendarApp.GuestStatus.YES:\n      case CalendarApp.GuestStatus.MAYBE:\n          var alarmTime \u003d _alarmTime(event);\n          if (firstAlarmTime \u003d\u003d undefined || alarmTime \u003c firstAlarmTime) {\n            firstAlarmIdx \u003d ii;\n            firstAlarmTime \u003d alarmTime;\n        }\n        break;\n      default:\n        break;\n    }\n  }\n  if (firstAlarmIdx \u003d\u003d undefined) {\n    return undefined;\n  }\n  return events[firstAlarmIdx];\n}\n\nfunction doGet(e) {\n\n  // open calendar\n\n  var cal \u003d CalendarApp.getCalendarById(\u0027your.e.mail@gmail.com\u0027);\n  if (cal \u003d\u003d undefined) {\n    return ContentService.createTextOutput(\"no access to calendar\");\n  }\n\n  // find the first event today that I\u0027m participating in, and that is not an all day event.\n\n  const now \u003d new Date();\n  var todayStart \u003d new Date(); todayStart.setHours(0, 0, 0);  // start at midnight this day\n  const oneday \u003d 24*3600000; // [msec]\n  const todayStop \u003d new Date(todayStart.getTime() + oneday - 1);\n  var eventsToday \u003d cal.getEvents(todayStart, todayStop);\n  var firstAlarmToday \u003d _findFirstAlarm(eventsToday);\n  \n  // find the first event tomorrow that I\u0027m participating in, and that is not an all day event.\n\n  const tomorrowStart \u003d new Date(todayStart.getTime() + oneday);\n  const tomorrowStop \u003d new Date(tomorrowStart.getTime() + 2*oneday - 1);\n  var eventsTomorrow \u003d cal.getEvents(tomorrowStart, tomorrowStop);\n  var firstAlarmTomorrow \u003d _findFirstAlarm(eventsTomorrow);\n  \n  // select the alarm event\n\n  Logger.log(\"firstAlarmToday\u003d\" + firstAlarmToday.getTitle());\n  Logger.log(\"alarmTime\u003d\" + _alarmTime(firstAlarmToday));\n  Logger.log(\"now\u003d\" + now);\n  //Logger.log(\"firstAlarmTomorrow\u003d\" + firstAlarmTomorrow.getTitle());\n  const event \u003d firstAlarmToday !\u003d undefined \u0026\u0026 _alarmTime(firstAlarmToday) \u003e now ? firstAlarmToday : firstAlarmTomorrow;\n\n  // print event details that should trigger alarm\n\n  var str \u003d \u0027\u0027;\n  if ( event !\u003d undefined ) {\n    const date \u003d event.getStartTime();\n    const alarm \u003d _alarmTime(event);\n    const startMinutes \u003d date.getHours()*60 + date.getMinutes();\n    const alarmMinutes \u003d alarm.getHours()*60 + alarm.getMinutes();\n    \n    //Logger.log(\"date \u003d \" + date);\n    //Logger.log(\"alarm \u003d \" + alarm);\n    //var reminders \u003d event.getPopupReminders();\n    //for (var ii \u003d 0; ii \u003c reminders.length; ii++) {\n    //  Logger.log(\"reminder[\" + ii + \"]\u003d\" + reminders[ii]);\n    //}  \n    \n    str +\u003d alarmMinutes + \u0027\\n\u0027 +   // alarm [minutes since midnight]\n      startMinutes + \u0027\\n\u0027 +   // start time of event in [minutes since midnight]\n        event.getTitle() +\u0027\\n\u0027; // event title\n    \n  }\n  Logger.log(\"\u003cREPLY\u003e\" + str + \"\u003c/REPLY\u003e\");\n  \n  return ContentService.createTextOutput(str);\n}"}]}
